---
title: "Classification of Body Fat based on Physical Measurements and Body Composition"
subtitle: "A comparitive analysis of methods of classifying body fat"
author: 
  - Aamishi Avarsekar
thanks: "Code and data are available at: https://github.com/aamishi/ImprovedGeneralHealthIndex/"
date: today
date-format: long
abstract: "BMI values fail to acknowledge the different body composition across both sexes. Using the Waist-Hip-Ratio is more accurate at estimating body fat levels using simple methods at home. This paper compares how this model performs against actual body composition such as isolated fat mass. Using this method makes self-identification of obsesity more accessible and preventive measures can be taken earlier."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(janitor)
library(arrow)
library(dplyr)
library(caret)
library(knitr)

# reading the final datasets:
cleaned_data_model <- read_parquet(file = here::here("data/analysis_data/measurements_analysis_data.parquet"))
body_mass_model <- read_parquet(file = here::here("data/analysis_data/body_mass_data.parquet"))
```


# Introduction

BMI is a common indicator for general health but it has its limitations. It does not take into consideration the actual body composition of an individual and other important factors such as sex and age. Through this paper, I would like to propose a new way categorising people based on other body measurements such as the waist-to-hip ratio and wrist and ankle circumferences measurements as they are more indicative of a person's visceral fat, this proving a more accurate representation of general health. I would like to propose a newer formula for General Health Index (GHI) through the BodyM dataset. I plan on using the Isaac Kuzmar dataset that has accurate measurements of body fat to create a Confusion Matrix to see how my model compares in providing more accurate body fat estimations through easlily measurable data such as waist and hip circumference.


- this paper uses 2 datasets to capture the difference in fat assessment for popular methods. BMI is a popular way of estimating health issues in an individual but it fails to capture details like body composition. In its initial design, BMI was designed using only male [] subjects and thus cannot be applied to females. However, due to excess popularity, it is used as a self-assessment to estimate your body composition and health risks. However, due to its inability to capture body composition, a lot of false positives and false negatives are produced. These indivuals often identify health risks [] later in the onset. My aim with this paper is to introduce simple measurements that can be recorded at home and help indivuals recognise when they should seek mdeical attention.

## BMI Classification:
```{r}
#| warning: false
#| message: false
#| echo: false
bmi_canada_gov <- data.frame(
  Category = c("Underweight", "Normal weight", "Overweight", "Obese - Class I", "Obese - Class II", "Obese - Class III"),
  `BMI Range` = c("Below 18.5", "18.5–24.9", "25.0–29.9", "30.0–34.9", "35.0–39.9", "40.0 and above")
)

# Create a table using knitr::kable
knitr::kable(
  bmi_canada_gov,
  col.names = c("Category", "BMI Range"),
  caption = "BMI Categories as per the Government of Canada Guidelines"
)
```

### The difference between an underweight and normal person:
Let us take a closer look at the BMI levels below 25 for underweight and normal weight adults.

```{r}
#| warning: false
#| message: false
#| echo: false
body_mass_data_raw <- read_parquet("../data/raw_data/body_mass_data.parquet")
body_mass_clean <- body_mass_data_raw %>%
  clean_names() %>%
  select(gender_m1f2, age, height_cm, w_kg, bmi, fat_mass_kg, fm, ffm_kg, bone_mass_kg, muscle_mass_kg) %>%
  mutate(
    bmi_category = case_when(
      bmi < 18.5 ~ "Underweight",
      bmi >= 18.5 & bmi <= 24.9 ~ "Normal weight",
      bmi >= 25.0 & bmi <= 29.9 ~ "Overweight",
      bmi >= 30.0 & bmi <= 34.9 ~ "Obese - Class I",
      bmi >= 35.0 & bmi <= 39.9 ~ "Obese - Class II",
      bmi >= 40.0 ~ "Obese - Class III"
    ))
```
# Data Section: Part 1: What is the difference between an underweight / athletic person / 

### All categories
```{r}
#| warning: false
#| message: false
#| echo: false

# this is what i chose
ggplot(body_mass_model, aes(x = bmi, y = fm)) +
  geom_point(aes(color = bmi_category), alpha = 0.7) +
  geom_vline(xintercept = c(18.5, 25, 30), linetype = "dashed", color = "black", linewidth = 0.5, alpha = 0.5) +
  labs(
    title = "BMI vs. Fat Mass by BMI Category",
    x = "BMI",
    y = "Fat Mass (kg)",
    color = "BMI Category"
  ) +
  theme_minimal()
```



A new way of estimating general body health is to use WHR. This ratio aims to capture the excess fat deposit in a person's abdominal area which is were most people store adipose fat. A high WHR indicates high levels of fat. However, this is not enough. This is simply the most effective way of identyfing the most obvious and dangerous place of fat accumulation.




# Data {#sec-data}

## Overview
#### General Statement
- [is this data observational or sample] The data used for this paper has two different sources and serve two different purpose. The first dataset considered is the BodyM dataset from Amazon Web Services (AWS) [ref]. This dataset serves as the training data for the model to predict the category of fat in a person. This dataset also included silhouettes to capture accurate body compositions of real test subjects. [the purpose of this]. This data was collected to support the estimation of bodily measurements using Machine Learning [reference]. The silhouettes are not being used for the purposes of this paper.
- [is this data observational or sample] The second dataset is the Body Fat Distribution distribution collected for estimating a new body fat measurement technique by Isaac Kuzmar Et Al. [reference]. For the purposes of this paper, this dataset would be refered to as the Body Compositon dataset as it used to calculate fat percentages based on actual body composition. It serves as a comparision for the model’s predictions.

### BodyM Dataset - AWS Marketplace for Open Data [fix this heading]
The BodyM Dataset, refered to teh Body Measurements dataset throughout this paper, was collected for [Ruiz2022] Ruiz Et Al. in their paper with a focus on underrepresented body types in estimation of fat and its susbquent health risks. The main data captured from this collection was the front and lateral silhouttes of [2000something] test subjects. These silhouttes were then converted to black and white images to be used by their augementation model. The subjects include X male and Y female aged A to B. The body measurements in this dataset were generated through their adversarial body simulator (ABS). The ABS was specifically modeled to capture underrespresented body types. The S3 [reference] package included 3 datasets: training, Test A and Test B. This paper uses the training dataset. The visual images of test subjects were photographed and 3D-scanned by lab technicians.
- Tibble of this dataset after cleaning:

```{r}
# measurements_tibble <- as_tibble(cleaned_data_model)
# kable(measurements_tibble, caption = "Example Tibble Output")
```


#### The variables of my use:

For this paper, this dataset is used to estimate the category of body fat that a person carries. To effectively differentiate the different body types, the model considers measurements that could indicate actual body compositions. I chose gender, height and weight and basic predictors for the model. However, according to [reference, WHO], waist-to-hip ratio is more accurate to predict levels of body fat in a person. Based on [reference], the two sexes have different tendencies of excess body fat collection also known as [adipose fat]. In males, excess body fat tends to collect in the abdominal region, whereas in females, fat collects in the hips. This ratio is indicative of fat accumulation and a higher ratio can be used as a precursor indicator for obesity [reference]. 

To consider body composition along the height of a person, a new variable called height-to-hip ratio, height_hip_ratio, was created. [referernce], something like two people with the same WHR could differ in the fat category that they belong to depending on the height. A tall person with a higher WHR is at a lower risk of developing cardiovascular risks than a shorter person with the same height [reference].

Lastly, to improve the quality of the model, I also selected ankle and wrist circumference measurements. [reference], [this is important for boundary values].

- include a table for WHR and who’s statement

#### The estimand for the model

The estimand for the model, fat_percentage_category, is created using WHR as a proxy initially. It is calculated based on the subjects gender and WHR as males and females have different fat accumulation patters. The ratio intervels for these categories was derived from []. The model then predicts a more accurate fat percentage category based on other predictors.

- visualisations.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

cleaned_data_model$bmi_category <- factor(cleaned_data_model$bmi_category, 
                            levels = c("Underweight", "Normal", "Overweight", "Obese"))
ggplot(cleaned_data_model, aes(x = gender, fill = bmi_category)) +
  geom_bar(position = "fill") +  # 'fill' makes it a proportion plot
  ylab("Proportion") +
  xlab("Gender") +
  labs(title = "Proportions of BMI Categories by Gender") +
  scale_y_continuous(labels = scales::percent) +  # Converts y-axis to percentage format
  theme_minimal()
```

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
cleaned_data_model$gender <- factor(cleaned_data_model$gender, labels = c("Female", "Male"))
ggplot(cleaned_data_model, aes(x = gender, y = waist_hip_ratio, fill = gender)) +
  geom_boxplot() +
  ylab("Waist-to-Hip Ratio") +
  xlab("Gender") +
  labs(title = "Distribution of Waist-to-Hip Ratio by Gender") +
  theme_minimal() +
  facet_wrap(~fat_percentage_category) + 
  scale_fill_manual(values = c("female" = "lightblue", "male" = "lightgreen"))
```

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
# cleaned_data_model$gender <- factor(cleaned_data_model$gender, labels = c("Female", "Male"))

cleaned_data_model$bmi_category <- factor(cleaned_data_model$bmi_category, 
                            levels = c("Underweight", "Normal", "Overweight", "Obese"))
ggplot(cleaned_data_model, aes(x = gender, y = height_hip_ratio, fill = gender)) +
  geom_boxplot() +
  ylab("Waist-to-Hip Ratio") +
  xlab("Gender") +
  labs(title = "Distribution of Waist-to-Hip Ratio by Gender") +
  theme_minimal() +
  facet_wrap(~bmi_category) + 
  scale_fill_manual(values = c("female" = "lightblue", "male" = "lightgreen"))
```
```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
# filtered_data <- subset(cleaned_data_model, bmi_category %in% c("Overweight", "Obese"))

# Create a combined boxplot to visualize differences in ankle and wrist for bmi_category = Overweight and Obese

cleaned_data_model$bmi_category <- factor(cleaned_data_model$bmi_category, 
                            levels = c("Underweight", "Normal", "Overweight", "Obese"))

long_data <- cleaned_data_model %>%
  gather(key = "Measurement", value = "Value", ankle, wrist)

# Create side-by-side boxplots for ankle and wrist measurements
ggplot(long_data, aes(x = bmi_category, y = Value, fill = bmi_category)) +
  geom_boxplot() +
  facet_wrap(~ Measurement) +  # This creates separate panels for 'ankle' and 'wrist'
  ylab("Measurement Value") +
  xlab("BMI Category") +
  labs(title = "Comparison of Ankle and Wrist Measurements for Overweight and Obese BMI Categories") +
  theme_minimal() +
  scale_fill_manual(values = c("Overweight" = "lightcoral", "Obese" = "lightsalmon")) +
  theme(legend.position = "none")
```


#### graph what i will be using in my model

### Body Composition Data - Isaac Kuzmar Et Al.
### Data Overview

The dataset compiles the body measurements of subjects aged, 18 and 60, and specifically with a desire to lose weight and improve body image. The participants resided in Barranquilla, Colombia and consisted of 234 males and 111 females. Medical exclusions were made while recruiting the subjects, such as pregnant women or people with medical pacemakers. The bodily measurements such as fat mass in kilograms and fat free mas in kilograms were determined using the Tanita MC-780 [reference] body composition analyzer. 

### The variables of my use:

The main variables that I considered fat mass percentage fm. This variable is obtained by dividing the fat mass in kilogram by the total weight in kilograms. The fat mass percentage is considered the main predictor for fat mass categories. As the body composition is more accuarate at measuring the actual amount of excess fat a person carries and can differentiate it from other weights such as fat free muscle mass [reference the variable]
#### graph what i will be using in my model

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
# Recode gender levels
body_mass_model_data_section <- body_mass_model %>%
  mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female"))) %>%
  mutate(fat_percentage_category = factor(fat_percentage_category,
                                          levels = c("Low", "Moderate", "High", "Extreme"))) %>%
  mutate(
    gender = as.factor(gender),
    fat_percentage_category = as.factor(fat_percentage_category)
  )
  
ggplot(body_mass_model_data_section, aes(x = gender, fill = fat_percentage_category)) +
  geom_bar(position = "fill") +  # 'fill' makes it a proportion plot
  ylab("Proportion") +
  xlab("Gender") +
  labs(title = "Proportions of BMI Categories by Gender") +
  scale_y_continuous(labels = scales::percent) +  # Converts y-axis to percentage format
  theme_minimal()
```

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
ggplot(body_mass_model, aes(x = weight, y = height, color = fm)) +
  geom_point(size = 3) +
  scale_color_viridis_c() + # Use a continuous color scale
  labs(title = "Height vs Weight with Fat Mass",
       x = "Weight",
       y = "Height",
       color = "Fat Mass (fm)") +
  theme_minimal()
```
```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
ggplot(body_mass_model, aes(x = weight, y = height, color = fm, size = fm)) +
  geom_point(alpha = 0.7) +
  scale_color_viridis_c() +
  scale_size_continuous(range = c(1, 10)) +
  labs(title = "Height vs Weight with Fat Mass",
       x = "Weight",
       y = "Height",
       color = "Fat Mass (fm)",
       size = "Fat Mass (fm)") +
  theme_minimal()
```
```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
ggplot(body_mass_model, aes(x = bmi, y = fm, color = gender)) +
  geom_point(alpha = 0.7) +
  facet_wrap(~ gender) +
  labs(title = "Fat Mass vs BMI by Gender",
       x = "BMI",
       y = "Fat Mass (fm)",
       color = "Gender") +
  theme_minimal()
```
```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
body_mass_long <- body_mass_model %>%
  pivot_longer(cols = c(fm, bmi), names_to = "measure", values_to = "value")

# Dual y-axis plot
ggplot(body_mass_long, aes(x = weight, y = value, color = measure)) +
  geom_point(alpha = 0.5) + # Optional: Add points for raw data
  geom_smooth(se = FALSE, method = "loess", span = 0.5) + # Smoothed trendline
  labs(title = "Smoothed Trends of FM and BMI by Age",
       x = "weight",
       y = "Value",
       color = "Measure") +
  theme_minimal() +
  facet_wrap(~gender)

```
- talk about the crowding for men

## what original BMI and WHR fail to capture


## How are these data sets important are how they relate to each other
#### desitination
#### well as any relationships between the variables.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
# Combine both datasets
cleaned_test_extract <- cleaned_data_model %>%
  select(gender, bmi_category, fat_percentage_category)
body_mass_extracted <- body_mass_model %>%
  select(gender, bmi_category, fat_percentage_category)
cleaned_test_extract$dataset <- "Measurements"
body_mass_extracted$dataset <- "Body Data"
combined_data <- rbind(cleaned_test_extract, body_mass_extracted)


# Count occurrences of each fat_percentage_category per dataset
library(dplyr)
category_counts <- combined_data %>%
  group_by(dataset, fat_percentage_category) %>%
  summarise(Count = n(), .groups = "drop")

# Create a bar plot to visualize the differences
library(ggplot2)
ggplot(category_counts, aes(x = fat_percentage_category, y = Count, fill = dataset)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Comparison of Fat Percentage Categories Across Data1 and Data2",
       x = "Fat Percentage Category", y = "Count") +
  theme_minimal() +
  scale_fill_manual(values = c("Measurements" = "lightblue", "Body Data" = "lightgreen"))


proportions <- combined_data %>%
  group_by(dataset, fat_percentage_category) %>%
  summarise(Count = n(), .groups = "drop") %>%
  mutate(Proportion = Count / sum(Count))

# Create a bar plot to visualize the proportions
ggplot(proportions, aes(x = fat_percentage_category, y = Proportion, fill = dataset)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Proportional Comparison of Fat Percentage Categories Across Data1 and Data2",
       x = "Fat Percentage Category", y = "Proportion") +
  scale_y_continuous(labels = scales::percent) +  # Show proportions as percentages
  theme_minimal() +
  scale_fill_manual(values = c("Measurements" = "lightblue", "Body Data" = "lightgreen"))
```


Overview text

## Measurement
	
Some paragraphs about how we go from a phenomena in the world to an entry in the dataset.


```{r}
#| warning: false
#| message: false
#| echo: false
```

Talk more about it.


```{r}
#| warning: false
#| message: false
#| echo: false
```

Talk way more about it. 

## Predictor variables

Add graphs, tables and text.

Use sub-sub-headings for each outcome variable and feel free to combine a few into one if they go together naturally.








# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

- multinomial logistic regression because we are predicting multiple categories

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification
- I wanted to provide a categorisation of fat levels in an indivual based on simple measurements. Using measurements such as height and weight that are used in the formula and WHR and ankle and wrist measurements, I wanted to capture a person's body compositon as much as possible. i expected that there is a positve relationship between a person's excess body fat levels and their WHR. In addition to WHR, the height if a person is also important to capture the distribution of fat, a short person with a high WHR would be at a higher risk of obesity related diseases.
- men are more likely to collect fat in their abdomen area and women in their hip area. To capture nature body shapes and leanness, i also considered....

## Model General Overview:

This paper uses 2 models to model the two datasets. The first model, the Body Measurements Model, would be used to predict fat percetage categories using the measurements of person’s body that can be obtained using a measuring tape. The second model, the Body Composition Model, is also designed to access the relation between different bodiliy compositions such as total body weight, excess fat weight, lean muscle mass in kilograms.

I used the packages [] to do []. Both models employ Multilevel Regression [] as the Fat Percentage Category has multiple categories including: essential, athlete, normal, high.

### Model 1:

In this model, the dependent variable is fat_percentage_category. The model is set up as follows

\begin{align}
\text{log}\left(\frac{P(y = j)}{P(y = \text{ref})}\right) = \beta_{0j} + \beta_{1j} \cdot \text{height} + \beta_{2j} \cdot \text{gender} + \beta_{3j} \cdot \text{waist\_hip\_ratio} + \beta_{4j} \cdot \text{height\_hip\_ratio}
\end{align}

<!-- Where: -->
<!-- \begin{align} -->
<!-- - \( y \) is the **fat percentage category** (e.g., categories like 'low', 'medium', 'high'). -->
<!-- - \( P(y = j) \) is the probability that the fat percentage falls into category \( j \). -->
<!-- - \( P(y = \text{ref}) \) is the reference category. -->
<!-- - \( \beta_{0j}, \beta_{1j}, \dots \) are the coefficients to be estimated for each category \( j \). -->
<!-- \end{align} -->

Where:
- \( y \) is the **fat percentage category**. The categories include low, moderate, high, and extreme. These equate low, moderate, high and extreme levels of body fat.
- \( P(y = j) \) is the probability that the fat percentage falls into category \( j \).
- \( P(y = \text{ref}) \) is the reference category.
- \( \beta_{0j}, \beta_{1j}, \dots \) are the coefficients to be estimated for each category \( j \).



### Model Justification

It is incredibily challenging to differentiate the body composition of a person based soley on their total weight, height and weight only. However, to increase the [goodness] of the classification, this model uses the waist_to_hip ratio, which is especially an important indicator for fat accumualtion across both genders. The model also uses height_hip_ratio to account for different body types. [this sentence might go in the datasection] As height is an important factor to evaluate the collection of fat in latitdunial(how tf do you spell it) places on a person’s body, this is an important factor to consider. However, using height simply does not effectvely communicate how a person’s body is composed latitudinally. So I chose to employ the height_hip_ratio ratio to provide more classification between body types. Additional features such and ankle and wrist are used to further differentiate between the categories.

### Assumptions and limitations

Assumptions:
- this model assumes that there is an obvious difference in body measurements and fat storing capacities in males and females, hence gender is an important predictor and also affects the proxy values of fat percentage owing to the calculation based on WHR.

Limitations: 

- The dataset does not include the age of the particapants. while a general age range is provided, such as 18-X years old, different age groups could differ in how they are categorised.
- This model would not be able to differentiate between age groups and hence would work poorly if this information is included.
- 

### Model validation

---

### Model 2:

In this model, the dependent variable is fat_percentage_category. The model is set up as follows

- fat_percentage_category = beta_0 + beta_1() + beta_() + beta_() + beta_()

where

- fatmass:
- weight:
- height_hip_ratio

### Model Justification

### Assumptions and limitations

Assumptions:
- this model assumes that there is an obvious difference in body measurements and fat storing capacities in males and females, hence gender is an important predictor and also affects the proxy values of fat percentage owing to the calculation based on WHR.

Limitations: 

- The dataset does not include the age of the particapants. while a general age range is provided, such as 18-X years old, different age groups could differ in how they are categorised.
- This model would not be able to differentiate between age groups and hence would work poorly if this information is included.
- This model is also built on data that was generated by the ABS [] simulator so it may be inherently working with an error.

### Model validation:

Model out-of-sample testing:

The dataset provided by BodyM already had a trainining and testing split. I used the Test A to test the accuracy of the model. As the method of collection was similar to the training data, the potential errors in the model could only arise from the fact that it is unseen data.

More elaboare explanation, tables and figures can be found at [].

RSME:
I also computed the RSME to evaluate the model’s performance as a lower RSME indicates accuracy in predicted vs actual fat percentage categories.


# Results
Our results are summarized in @tbl-measurementmodelresults and @tbl-bodymass-modelresults. Our model's results and interpretation:

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| label: tbl-measurementmodelresults
#| tbl-cap: "TODO"


# # Code chunk to import models
measurements_model_paper <- readRDS(file = here::here("models/measurements_model.rds"))
measurements_model_summary <- summary(measurements_model_paper)
measurements_summary_df <- as.data.frame(measurements_model_summary$coefficients)

# Create and style the table
kable(measurements_summary_df, caption = "Summary of Measurements Model")
```
From the table {} we can see that the intercepts are very low and negative. The probability of the model making a classification is very unlikely with the catgegory with the highest probability being high. As our data is composed of people with a desire to improve body image, this makes sense, as the people with higher fat percentages are more likely to participate in such a study. `waist_hip_ratio` has a negative correlation with the levels of the fat percentage category prediction. High `waist_hip_ratio`s are associated with higher body fat percentage. So the lower a person's `waist_hip_ratio` is, the less likely the model classifies them in the `high` category. On the other hand, `height_hip_ratio` has a positive relation with the classification levels. `height_hip_ratio` takes into a consideration the overall mass (and fat) distribution of a person vertically. So if a person has a more evenly distributed composition, they would have a higher `height_hip_ratio` ratio with a higher chance of being classified in a lower fat category. Despite the model having very few subjects that were underweight, the classification between Underweight and Normal BMI values has improved with more diverse factors. It is likely that Normal BMI categories are also being correctly identified with lower fat levels. There is a negative correlation with the heights of the subjects suggesting that taller people are less likely to be classified with higher levels of fat. Detailed interpretation of this fact is later discussed in the Results Section {}.


```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| label: tbl-bodymass-modelresults
#| tbl-cap: "TODO"


# # Code chunk to import models
body_mass_model_paper <- readRDS(file = here::here("models/body_mass_model_bmi.rds"))
body_mass_model_summary <- summary(body_mass_model_paper)
body_mass_summary_df <- as.data.frame(body_mass_model_summary$coefficients)

# Create and style the table
kable(body_mass_summary_df, caption = "Summary of Body Mass Model")
```

The negative intercepts indicate that in the absence of any predictors, the model has very low estimates for the body fat classifications. However, the model is most likeyly to classify a person in the `High` category owing to the distribution of the dataset. The positive intercept for a `Normal` classification mean that the taller a person is, the more likely they are to be classified as `Normal`. As this model is directly based on the actual body composition of a person, the increasing levels of fat percentage indicated by `fm` show that the higher percentage of fat that a person has, the more likely they would be higher in the classification levels.



## Predictions based body circumferences overgeneralize the population

```{r}

# measurements_results <- cleaned_data_model %>%
#   select(gender, height, weight, height_category, fat_percentage_category, predicted_category) %>%
#  mutate(source = "Measurements")
# 
# body_composition_results <- body_mass_model %>%
#   select(gender, height, weight, height_category, fat_percentage_category, predicted_category) %>%
# mutate(source = "Body Composition")
# 
# elongated_data <- bind_rows(measurements_results, body_composition_results)
# 
# ggplot(elongated_data, aes(x = predicted_category, fill = source)) +
#   geom_density(alpha = 0.5) +
#   facet_wrap(~ predicted_category) +
#   labs(title = "Density Plot of Predicted Categories by Source",
#        x = "Predicted Category",
#        y = "Density",
#        fill = "Source") +
#   theme_minimal()
```
From the above prediction density chart by each model per fat percentage category, we see that the Measurements model has higher peaks at the each classification. This suggests that more people are being classified into a similar category only based on their physical traits such as height and Waist-to-Hip ratio. The peaks of each category from the Body Composition is accurate in identifying the major classification. However, the distribution not being as concentrated as from the Measurements model suggest that the diversification of different body types is being identified properly.

```{r chunk-name}
#| echo: false
#| eval: true
#| warning: false
#| message: false
levels_results <- union(levels(cleaned_data_model$predicted_category), levels(body_mass_model$predicted_category))


measurements_results <- cleaned_data_model %>%
  select(height, weight, height_category, fat_percentage_category, predicted_category) %>%
  mutate(source = "Measurements") 

body_composition_results <- body_mass_model %>%
  select(height, weight, height_category, fat_percentage_category, predicted_category) %>%
 mutate(source = "BodyComposition")

elongated_data <- bind_rows(measurements_results, body_composition_results)

# Calculate the percentage of each predicted category
category_percentage_by_source <- elongated_data %>%
  group_by(source, predicted_category) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100) %>%
  select(source, predicted_category, percentage)

category_percentage_by_source_height <- elongated_data %>%
  group_by(source, height_category, predicted_category) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count)) * 100) %>%
  select(source, height_category, predicted_category, percentage)

# Print the result
print(category_percentage_by_source)

ggplot(category_percentage_by_source, aes(x = predicted_category, y = percentage, fill = source)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Percentage of Predicted Categories by Source",
       x = "Predicted Category",
       y = "Percentage (%)") +
  theme_minimal() +
  scale_fill_manual(values = c("Measurements" = "skyblue", "BodyComposition" = "grey")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if needed
```
## The Body Composition Model has diverse classifcation for different heights groups
```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
# Calculate proportions for each combination of predicted_category, height_category, and source
category_proportions <- elongated_data %>%
  group_by(height_category, predicted_category, source) %>%
  summarise(count = n()) %>%
  group_by(height_category, source) %>%
  mutate(percentage = (count / sum(count)) * 100)

# Create the stacked bar plot
ggplot(category_proportions, aes(x = height_category, y = percentage, fill = predicted_category)) +
  geom_bar(stat = "identity", position = "stack") +
  facet_wrap(~ source) +
  labs(title = "Proportion of Predicted Categories by Height Category and Source",
       x = "Height Category",
       y = "Percentage (%)",
       fill = "Predicted Category") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set1") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels
```

The primary shortfall of the BMI categories was that it failed to differententiate the body types based on other factors such as where the fat was collected. From the above graph, we can see that across different heights, the Measurements Model is pretty consistent with providing similar proportions for different fat categories. This suggest that it was group people on too broad categories that did not necessarily capture the right effect of height of body compostion. Specifically, BMI fails to recognize the vertical spread of fat accumulation and so taller people get naturally classified as having lower fat levels. However, the body composition model, has a better ability a higher percentage of people actually have a higher classification of high and extreme body fat across all height groups.

## Differentiating between different levels of Obeseity.

## What BMI fails to capture
```{r}

  # Function to categorize weight
  
cleaned_data_model <- cleaned_data_model %>%
  mutate(weight_category = cut(weight, 
                               breaks = seq(40, 150, by = 10), # Specify your range
                               labels = c("40-50", "50-60", "60-70", "70-80", "80-90", "90-100", "100-110", "110-120", "120-130", "130-140", "140-150"),
                               include.lowest = TRUE))

# Apply the same logic for body_data
body_mass_model <- body_mass_model %>%
  mutate(weight_category = cut(weight, 
                               breaks = seq(40, 150, by = 10), # Specify your range
                               labels = c("40-50", "50-60", "60-70", "70-80", "80-90", "90-100", "100-110", "110-120", "120-130", "130-140", "140-150"),
                               include.lowest = TRUE))

# Assuming measurements_data and body_data have the same structure
measurements_long <- cleaned_data_model %>%
  select(weight_category, predicted_category, bmi_category) %>%
  pivot_longer(cols = c(predicted_category, bmi_category),
               names_to = "category_type",
               values_to = "category") %>%
  mutate(source = "Measurements")

body_data_long <- body_mass_model %>%
  select(weight_category, predicted_category, bmi_category) %>%
  pivot_longer(cols = c(predicted_category, bmi_category),
               names_to = "category_type",
               values_to = "category") %>%
  mutate(source = "Body Composition")

# Combine both datasets into one for easy plotting
combined_data <- bind_rows(measurements_long, body_data_long)
  
  ggplot(combined_data, aes(x = weight_category, fill = category)) +
  geom_bar(position = "fill", alpha = 0.6) +
  facet_grid(category_type ~ source, scales = "free_y") +  # Facet by category_type and source
  labs(title = "Proportions of Categories by Weight Range and Dataset",
       x = "Weight Range (kg)",
       y = "Proportion",
       fill = "Category") +
  theme_minimal() +
  theme(legend.position = "bottom")


```


# Discussion

## Obesity Risk Identification {#sec-first-point}

This paper's main goal was to compare how accurate are body measurements to estimate fat percentage at home. Other ways of estimating a person's body fat include scans like DEXA {source}. These scans are expensive and inaccessible. Most people turn to measuring BMI's to estimate their general level of health. The Government of Cananda also advices that adults use BMI to estimate their health []. As seen in this paper, this inherently flawed as BMI fails to capture the composition of a body. However, even the introduction of simple measurement like Waist-to-Hip ratio, shows that there is a general improvement in differentiating fat levels. The Waist-to-Hip ratio is especially important between the two sexes as fat accumulation pattern differs, which is not even considered in the BMI formula. Additionally, as a higher proportion of people are classified as Normal using BMI, without failing to recognise that having a high level of fat despite having a lower BMI is still dangerous as it could potentially prevent them from seeking early care against illnesses like insulin resistance. Insulin resistance occurs when there is a body fat percentage of {}. By popularising a more accurate system, we could urge people to take earlier preventive care. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Second discussion point {#sec-second-point}

## Third discussion point {#sec-third-point}

## Weaknesses and next steps {#sec-weaknesses-point}
- the BodyM dataset does not include age. An older person has lower metabolism [] and a higher chance of collecting fat on their abdomen.

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false

# predictions <- as.factor(predict(measurements_model_paper, newdata = cleaned_data_model))
# reference <- as.factor(cleaned_data_model$fat_percentage_category)
# measurements_cm <- confusionMatrix(predictions, cleaned_data_model$fat_percentage_category)
# # Extract the confusion matrix
# measurements_conf_matrix <- as.data.frame(measurements_cm$table)
# measurements_conf_matrix_df <- as.data.frame(measurements_conf_matrix)
# rownames(measurements_conf_matrix_df) <- paste("Observed:", rownames(measurements_conf_matrix))
# colnames(measurements_conf_matrix_df) <- paste("Predicted:", colnames(measurements_conf_matrix))
# kable(measurements_conf_matrix_df, caption = "Confusion Matrix")
# 
# # Extract overall statistics
# overall_stats <- as.data.frame(t(measurements_cm$overall))
# kable(overall_stats, caption = "Overall Statistics")
# 
# residuals <- residuals(measurements_model_paper, type = "deviance")
# plot(residuals)
```

# ```{r}
# modelplot(political_preferences, conf_level = 0.9) +
#   labs(x = "90 per cent credibility interval")
# ```

\newpage


# References

